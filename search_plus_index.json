{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 这里记载了我使用的工具教程。 曲奇云-软件集合群组云下有在接触Gitbook之前写的一些教程，和工具下载。 使用微信登录。 该文档主要记软件集合群组云入门教程后的进阶使用教程。 Gitbook教程 Gitbook教程 该链接主要介绍Gitbook的入门教程。配合其使用的教程如下： 链接 Github 利用Github来学习 Copyright © mine 2000-2020 all right reserved，powered by Gitbook文件修订时间： 2021-06-08 10:21:40 var targetUl = document.getElementsByClassName('page-inner')[0].getElementsByTagName('ul')[0];if(targetUl.getElementsByTagName('a').length>0){targetUl.className='toc';} window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; "},"git.html":{"url":"git.html","title":"git使用教程","keywords":"","body":"[toc] Git使用教程 参考 Git使用教程——简书 git安装教程 git常用命令 git使用教程 Git官方手册 教程 猴子都能懂的GIT入门 git教程穆雪峰(来源简书) 在这开始之前必须要了解一些 dos命令(window 系统)。dos命令常用请前往java基础.md文件下查看。 下面的命令都在git-bash.exe下运行，如果在cmd下运行有些命令会失效 cat readme.txt 这是linux命令 在window下不能使用。 window下查看文件内容命令 type readme.txt 安装完成后 git config --global user.name \"wolfdream080\" git config --global user.email \"1504863949@qq.com\" 每个机器都必须自报家门git config命令 --global参数，用了这个参数，表示这台机器上所有的Git仓库都会使用这个配置。你也可以对某个仓库指定不同的用户名和Email。 pwd 用于显示目录 git init 用于把这个目录变成可以管理的仓库(所有的文件都必须放在这个目录下，不然无法git) 本次演示的仓库目录如下： 如果无法看到 .git 文件夹，如图操作 取消git init命令 rm -rf .git 创建一个 readme.txt 在文件里输入信息 git diff readme.txt 查看文件被修改了什么(查看好后，再去提交比较放心) git add 文件名字 如(readme.txt) ————把文件添加到仓库 这个命令可以添加多个文件到仓库。多运行几次。 执行命令无任何显示就对了 把文件提交到仓库： git commit -m \"first file\" -m 后面输入的表示 文件版本昵称 git status 查看状态该诉你文件有没有提交，有没有修改等信息 On branch master nothing to commit, working tree clean 显示上面信息表示没有文件可提交。 git log 查看历代文件修改的版本 最近到最远的版本 这时候 你自己设置的版本号昵称就起到作用了 git log --pretty=oneline 你看到的一大串是 commit id(版本号) HEAD表示当前版本 回退版本 git reset --hard HEAD^ 表示回退到上一个版本 回退上100版本 HEAD~100 实现这个命令的前提是你没有关闭git-bash命令窗口，关闭了则无法看到第5版本的commit id 假设你你从第5版本回到第4版本，目前是第4版本想回到第5版本(过去回到未来） git reset --hard 第5版本的版本号(前几位)不能太少。 如果你是在cmd下运行这个命令 会出现More？ 这个暂时未能解决 cat readme.txt(文件名) 查看文件内容 当你关闭git-bash窗口时想回答未来版本这时候用 git reflog 记录你的每一次命令(可以看到未来版本号) 工作区和暂存区 git add 就是把文件放到暂存区 然后 git commit 进行一次性提交 远程仓库 git push origin master 的错误 Copyright © mine 2000-2020 all right reserved，powered by Gitbook文件修订时间： 2021-06-08 11:16:14 var targetUl = document.getElementsByClassName('page-inner')[0].getElementsByTagName('ul')[0];if(targetUl.getElementsByTagName('a').length>0){targetUl.className='toc';} window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; "},"IDE/IDESkills.html":{"url":"IDE/IDESkills.html","title":"IDE","keywords":"","body":" Idea connecting to database Idea connecting to database Copyright © mine 2000-2020 all right reserved，powered by Gitbook文件修订时间： 2021-06-06 19:23:32 var targetUl = document.getElementsByClassName('page-inner')[0].getElementsByTagName('ul')[0];if(targetUl.getElementsByTagName('a').length>0){targetUl.className='toc';} window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; "},"cmd/cmd.html":{"url":"cmd/cmd.html","title":"cmd命令","keywords":"","body":" cmd使用教程 window下递归删除指定文件和文件夹 tree命令 cmd使用教程 window下递归删除指定文件和文件夹 //删除文件 del *.后缀 /s //删除文件夹 for /r 目录 %a in (文件夹名\\) do @if exist \"%a\" rd /s/q \"%a\" tree命令 tree Copyright © mine 2000-2020 all right reserved，powered by Gitbook文件修订时间： 2021-06-03 15:14:54 var targetUl = document.getElementsByClassName('page-inner')[0].getElementsByTagName('ul')[0];if(targetUl.getElementsByTagName('a').length>0){targetUl.className='toc';} window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; "}}